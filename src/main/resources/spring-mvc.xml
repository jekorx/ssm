<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
	  					   http://www.springframework.org/schema/beans/spring-beans.xsd
	                       http://www.springframework.org/schema/context
	                       http://www.springframework.org/schema/context/spring-context.xsd
	                       http://www.springframework.org/schema/tx
	                       http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
	                       http://www.springframework.org/schema/mvc
	                       http://www.springframework.org/schema/mvc/spring-mvc.xsd
	                       http://www.springframework.org/schema/aop
	                       http://www.springframework.org/schema/aop/spring-aop-4.1.xsd"
	   default-lazy-init="true">
      
    <!-- 通过mvc:resources设置静态资源，这样servlet就会处理这些静态资源，而不通过控制器 -->  
    <!-- 设置不过滤内容，比如:css,js,img 等资源文件 -->  
    <mvc:resources location="/resources/*" mapping="/**" />

    <!-- 对静态资源文件的访问，交给default servlet handler处理 -->
    <mvc:default-servlet-handler/>
    
    <!-- 添加注解驱动 -->  
    <mvc:annotation-driven />  
    <!-- 默认扫描的包路径 -->  
    <context:component-scan base-package="com.test.project.controller" />
	
	<!-- 拦截器配置 -->
	<mvc:interceptors>
	    <!-- session验证 -->
	    <mvc:interceptor>
	        <mvc:mapping path="/**" />
	        <bean class="com.test.project.interceptor.SystemInterceptor">
	            <property name="allowUrls">
	                <list>
	                    <!-- 如果请求中包含以下路径，则不进行拦截 -->
	                    <value>/login</value>
	                    <value>/logout</value>
	                </list>
	            </property>
	        </bean>
	    </mvc:interceptor>
	</mvc:interceptors>

    <!-- 将返回数据转成json --> 
    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
            <bean id="fastJsonHttpMessageConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html;charset=UTF-8</value>
				        <value>text/json;charset=UTF-8</value>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    
    <!-- 统一异常处理方式 -->
	<bean id="exceptionHandler" class="com.test.project.exception.ExceptionHandler"/>
    
    <!-- mvc:view-controller可以在不需要Controller处理request的情况，转向到设置的View -->  
    <!-- 像下面这样设置，如果请求为/，则不通过controller，而直接解析为/index.jsp -->  
    <mvc:view-controller path="/" view-name="login" />  
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
        <!-- 配置jsp路径前缀   -->
        <property name="prefix" value="/WEB-INF/page/"></property>  
        <!-- 配置URl后缀   -->
        <property name="suffix" value=".jsp"></property>  
    </bean>
      
	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<!-- 
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
              默认编码
        <property name="defaultEncoding" value="utf-8" />
              文件大小最大值
        <property name="maxUploadSize" value="10485760000" />
              内存中的最大值
        <property name="maxInMemorySize" value="40960" />
    </bean>
     -->
    
</beans>  